pipeline {
    agent none

    environment {
        SONAR_URL      = "http://52.91.109.138:9000"
        DOCKER_IMAGE   = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
        GIT_REPO_NAME  = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME  = "iam-veeramalla"
    }

    stages {
        stage('Checkout') {
            agent any
            steps {
                checkout scm
            }
        }

        stage('Build & Test') {
            agent {
                docker {
                    image 'maven:3.9.6-eclipse-temurin-17'
                    args '--user root'
                }
            }
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Static Code Analysis') {
            agent {
                docker {
                    image 'maven:3.9.6-eclipse-temurin-17'
                    args '--user root'
                }
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh '''
                            mvn sonar:sonar \
                                -Dsonar.login=$SONAR_AUTH_TOKEN \
                                -Dsonar.host.url=${SONAR_URL}
                        '''
                    }
                }
            }
        }

        stage('Build & Push Docker Image') {
            agent {
                docker {
                    image 'docker:24.0.5'
                    args '-v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                withCredentials([
                    usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')
                ]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh '''
                            echo "Logging in to Docker..."
                            docker login -u $DOCKER_USER -p $DOCKER_PASS
                            echo "Building image ${DOCKER_IMAGE}..."
                            docker build -t ${DOCKER_IMAGE} .
                            echo "Pushing image ${DOCKER_IMAGE}..."
                            docker push ${DOCKER_IMAGE}
                        '''
                    }
                }
            }
        }

        stage('Update Deployment File') {
            agent any
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "vishnubongoni99@gmail.com"
                        git config user.name "Vishnu Bongoni"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
